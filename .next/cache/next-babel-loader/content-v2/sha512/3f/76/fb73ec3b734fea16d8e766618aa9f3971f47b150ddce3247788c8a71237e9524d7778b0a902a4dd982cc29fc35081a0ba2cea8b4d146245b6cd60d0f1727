{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/omkar/Desktop/Next/next/pages/[meetupId]/index.js\";\nimport MeetupDetail from '../../components/meetups/MeetupDetails';\nimport { MongoClient } from 'mongodb';\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://www.bremen-tourism.de/_Resources/Persistent/0eb8390f610f343b3dc90c9d5e3182a18e4b67c1/bremen-roland-1280x640.jpg\",\n    title: \"My address\",\n    address: \"Bremen Street\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 8\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://omkar:quantum@cluster0.8l72d.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  // fetching data for a single meetups\n  const meetupid = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://omkar:quantum@cluster0.8l72d.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = meetupsCollection.findOne({\n    _id: meetupid\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: selectedMeetup\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/omkar/Desktop/Next/next/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","MeetupDetails","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","meetupid","selectedMeetup","findOne","props","meetupData"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,wCAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAEA,SAASC,aAAT,GAAyB;AACrB,sBACG,QAAC,YAAD;AAAc,IAAA,KAAK,EAAC,yHAApB;AAA8I,IAAA,KAAK,EAAC,YAApJ;AAAiK,IAAA,OAAO,EAAC;AAAzK;AAAA;AAAA;AAAA;AAAA,UADH;AAGH;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMH,WAAW,CAACI,OAAZ,CAAoB,4FAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA3B,EAAsCC,OAAtC,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAYC,MAAM,KAAK;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AAAV,KAAL,CAAlB;AAFJ,GAAP;AAIH;AAED,OAAO,eAAeC,cAAf,CAA+BC,OAA/B,EAAwC;AAC3C;AAEA,QAAMC,QAAQ,GAAGD,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,QAAMf,MAAM,GAAG,MAAMH,WAAW,CAACI,OAAZ,CAAoB,4FAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMgB,cAAc,GAAGjB,iBAAiB,CAACkB,OAAlB,CAA0B;AAACd,IAAAA,GAAG,EAAEY;AAAN,GAA1B,CAAvB;AACAnB,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACHa,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAEH;AADT;AADJ,GAAP;AAMH;AAED,eAAetB,aAAf","sourcesContent":["import MeetupDetail from '../../components/meetups/MeetupDetails';\nimport { MongoClient } from 'mongodb';\n\nfunction MeetupDetails() {\n    return (\n       <MeetupDetail image=\"https://www.bremen-tourism.de/_Resources/Persistent/0eb8390f610f343b3dc90c9d5e3182a18e4b67c1/bremen-roland-1280x640.jpg\" title=\"My address\" address=\"Bremen Street\"/>\n    )\n}\n\nexport async function getStaticPaths() {\n    const client = await MongoClient.connect('mongodb+srv://omkar:quantum@cluster0.8l72d.mongodb.net/meetups?retryWrites=true&w=majority')\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n\n    const meetups = await meetupsCollection.find({}, {_id: 1 }).toArray();\n    client.close();\n    return {\n        fallback: false,\n        paths: meetups.map(meetup => ({ params: { meetupId: meetup._id.toString() }}))\n    }\n}\n\nexport async function getStaticProps (context) {\n    // fetching data for a single meetups\n\n    const meetupid = context.params.meetupId;\n    const client = await MongoClient.connect('mongodb+srv://omkar:quantum@cluster0.8l72d.mongodb.net/meetups?retryWrites=true&w=majority')\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n\n    const selectedMeetup = meetupsCollection.findOne({_id: meetupid})\n    client.close();\n    return {\n        props: {\n            meetupData: selectedMeetup,\n            \n        }\n    }\n}\n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}