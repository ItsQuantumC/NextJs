{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/omkar/Desktop/Next/next/pages/[meetupId]/index.js\";\nimport MeetupDetail from '../../components/meetups/MeetupDetails';\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://www.bremen-tourism.de/_Resources/Persistent/0eb8390f610f343b3dc90c9d5e3182a18e4b67c1/bremen-roland-1280x640.jpg\",\n    title: \"My address\",\n    address: \"Bremen Street\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 8\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/omkar/Desktop/Next/next/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,wCAAzB;;AAGA,SAASC,aAAT,GAAyB;AACrB,sBACG,QAAC,YAAD;AAAc,IAAA,KAAK,EAAC,yHAApB;AAA8I,IAAA,KAAK,EAAC,YAApJ;AAAiK,IAAA,OAAO,EAAC;AAAzK;AAAA;AAAA;AAAA;AAAA,UADH;AAGH;;KAJQA,a;;AAuCT,eAAeA,aAAf","sourcesContent":["import MeetupDetail from '../../components/meetups/MeetupDetails';\nimport { MongoClient } from 'mongodb';\n\nfunction MeetupDetails() {\n    return (\n       <MeetupDetail image=\"https://www.bremen-tourism.de/_Resources/Persistent/0eb8390f610f343b3dc90c9d5e3182a18e4b67c1/bremen-roland-1280x640.jpg\" title=\"My address\" address=\"Bremen Street\"/>\n    )\n}\n\nexport async function getStaticPaths() {\n    const client = await MongoClient.connect('mongodb+srv://omkar:quantum@cluster0.8l72d.mongodb.net/meetups?retryWrites=true&w=majority')\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n\n    const meetups = await meetupsCollection.find({}, {_id: 1 }).toArray();\n    client.close();\n    return {\n        fallback: false,\n        paths: meetups.map(meetup => ({ params: { meetupId: meetup._id.toString() }}))\n    }\n}\n\nexport async function getStaticProps (context) {\n    // fetching data for a single meetups\n\n    const meetupid = context.params.meetupId;\n    const client = await MongoClient.connect('mongodb+srv://omkar:quantum@cluster0.8l72d.mongodb.net/meetups?retryWrites=true&w=majority')\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n\n    const selectedMeetup = meetupsCollection.findOne({_id: meetupid})\n    client.close();\n    return {\n        props: {\n            meetupData: selectedMeetup,\n            \n        }\n    }\n}\n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}